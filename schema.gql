type User {
  username: String
  email: String @unique
  resumes: [Resume] @relation
  confirmed: Boolean
  jobTitle: String
  bio: String
}

type Resume {
  user: User
  jobTitle: String
  bio: String
  title: String
  priority: Int
  categories: [Category] @relation
  templateId: String
  contactInfo: [ContactInfo] @relation
  layout: [Layout] @relation
}

type Category {
  resume: Resume
  name: String
  type: String
  priority: Int
  items: [Item] @relation
}

type Item {
  category: Category
  title: String
  location: String
  description: String
  month1: String
  year1: String
  month2: String
  year2: String
  value: String
  priority: Int
}

type ContactInfo {
  resume: Resume
  name: String
  value: String
  priority: Int
}

type Layout {
  resume: Resume
  name: String
  value: String
}

type Query {
  users: [User]
  usersByConfirmStatus(confirmed: Boolean!): [User]
  userByEmail(email: String!): User
  resumeByTitle(title: String!): Resume
}

type Mutation {
  cascadeDeleteResume(id: ID!): ID! @resolver(name: "cascadeDeleteResume")
  cascadeDeleteCategory(id: ID!): ID! @resolver(name: "cascadeDeleteCategory")
  cascadeDeleteItem(id: ID!): ID! @resolver(name: "cascadeDeleteItem")
  cascadeDeleteContactInfo(id: ID!): ID!
    @resolver(name: "cascadeDeleteContactInfo")

  moveResume(id: ID!, amount: Int!): ID! @resolver(name: "moveResume")
  moveCategory(id: ID!, amount: Int!): ID! @resolver(name: "moveCategory")
  moveItem(id: ID!, amount: Int!): ID! @resolver(name: "moveItem")
}
